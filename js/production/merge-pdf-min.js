const{degrees:degrees,PDFDocument:PDFDocument,rgb:rgb,StandardFonts:StandardFonts}=PDFLib,pdfs=["http://mbp2.local:5757/assets/pdf/2019-05-01_Parking_May.pdf","http://mbp2.local:5757/assets/pdf/2019-05-01_Parking_May.pdf","http://mbp2.local:5757/assets/pdf/binder-order-conf.pdf"];function updateProgressBar(a,t){const e=a*t;document.getElementById("progress-bar-indicator").style.width=`${e}%`}async function asyncForEach(a,t){for(let e=0;e<a.length;e++)await t(a[e],e,a)}async function mergeMultiplePDFs(a,t){let e=0,n=100/a.length;const o=await PDFDocument.create();console.log(`${a.length} documents to merge`),await asyncForEach(a,async a=>{console.log(`Retrieving ${a}...`);const t=`http://mbp2.local:5757/assets/pdf/${a}`;console.log(t);let s=await fetch(t).then(a=>a.arrayBuffer());const c=await PDFDocument.load(s),r=c.getPageIndices(),d=await o.copyPages(c,r);await asyncForEach(d,async a=>{o.addPage(a)}),updateProgressBar(++e,n)});const s=await o.save();download(s,`${t}.pdf`,"application/pdf")}